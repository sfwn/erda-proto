syntax = "proto3";

package erda.core.pipeline.base;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/erda-project/erda-proto-go/core/pipeline/base/pb";

// PipelineEvent is k8s-event-like stream event.
message PipelineEvent {
  // Optional; this should be a short, machine understandable string that gives the reason
  // for this event being generated. For example, if the event is reporting that a container
  // can't start, the Reason might be "ImageNotFound".
  // +optional
  string reason = 1;

  // Optional. A human-readable description of the status of this operation.
  // +optional
  string message = 2;

  // Optional. The component reporting this event. Should be a short machine understandable string.
  // +optional
  PipelineEventSource source = 3;

  // The time at which the event was first recorded. (Time of server receipt is in TypeMeta.)
  // +optional
  google.protobuf.Timestamp firstTimestamp = 4;

  // The time at which the most recent occurrence of this event was recorded.
  // +optional
  google.protobuf.Timestamp lastTimestamp = 5;

  // The number of times this event has occurred.
  // +optional
  int32 count = 6;

  // Type of this event (Normal, Warning), new types could be added in the future.
  // +optional
  string type = 7;
}

// PipelineEventSource represents the source from which an event is generated
message PipelineEventSource {
  // Component from which the event is generated.
  // +optional
  string component = 1;

  // Node name on which the event is generated.
  // +optional
  string host = 2;
}